Slide 1:
1
Disk Schedulingخوارزميات جدولة الأقراص
Access time has two major components
Seek time is the time for the disk are to move the heads to the cylinder containing the desired sector
Rotational latency is the additional time waiting for the disk to rotate the desired sector to the disk head

Slide 2:
اهم مسئوليات نظم التشغيل استخدام الاجهزة بكفاءه وفي حالة القرص الصلب لابد من الاهتمام بمعايير منها تسريع وقت الوصول وعرض القرص ايضا
يندرج تحت هذا المعيار مفهومين :(acess time)وقت الوصول-وهو الوقت الازم لتحريك راس القرص الى المكان المطلوب
المفهوم الاول: وقت الطلب   (seek time)
وهوالوقت المنتظرلتدوير القرص لوضع  الراس عليه
المفهوم الثاني: تاخير التدويير      (rotational latency)
وهو العدد الاجمالي للبايت المنقولة مقسومة على الوقت من طلب الخدمة وحتى الانتهاء منها .
عرض القرص : (disk bandwidth )  -
وفهمنا لهذه المعايير يساعدنا في تقييم اداء خوارزميات جدوله القرص ومعرفة الافضل
2

Slide 3:
3
Disk Scheduling (Cont)
Several algorithms exist to schedule the servicing of disk I/O requests
We illustrate them with a request queue (0-199)
98, 183, 37, 122, 14, 124, 65, 67
Head pointer 53

Slide 4:
4
First-come First-Served (FCFS)
Illustration shows total head movement of 640 cylinders

Slide 5:
5

Slide 6:
6
فسيتحرك الرأس من 53 إلى 98 إلى 183 ثم يعود إلى 37 ثم 122 ثم يعود إلى 14 ثم 124 ثم يعود إلى 65 وأخيراً إلى  67
لكي نحسب مجمل تحرك الرأس نقوم بجمع القيم المطلقة للفرق بين مكان وجود الرأس والمكان الذاهب إليه كما يلي :
total head movement = | 53 - 98 | + |98 - 183 | + |183 - 37 | + |37 - 122 | + |122 - 14 | + | 14 - 124 | + | 124 - 65 | + | 65 - 67 |
=  45 + 85 + 146 + 85 + 108 + 110 + 59 + 2
=  640   cylinders
الفرق في الانتقال من 122 إلى 14 ثم العودة إلى 124 مرة أخرى يوضح المشكلة وهذا ما يعرف بـ   wild jump
فلو كان تنفيذ الذهاب إلى 14 و 37 ينفذ تباعاً  قبل الذهاب إلى 122 و 124 لقلّ تحرك الرأس ولذادت الفعالية

Slide 7:
7
Shortest Seek time First (SSTF)
Selects the request with the minimum seek time from the current head position
SSTF scheduling is a form of SJF scheduling; may cause starvation of some requests
Illustration shows total head movement of 236 cylinders
تقوم  بخدمة جميع الطلبات القريبة من الرأس قبل توجه الرأس بعيداً لخدمة الطلبات الأخرى .
هذا الافتراض هو أساس هذه الخوارزمية والذي يحل المشكلة الظاهرة في الخوارزمية السابقة
فهذه الخوارزمية تقوم باختيار الطلب صاحب الفرق الأقل من مكان الرأس الحالي .
الصورة التالية توضح هذه الخوارزمية

Slide 8:
8
SSTF (Cont)

Slide 9:
9
الطلب الأقرب لمكان الرأس الحالي الذي هو 53 ، يكون 65
| 53 - 65 | = 12
بعد ذلك تكون النقطة الأقرب هي 67
يليها 37
فــ 37 أقرب من 98 لأن
|67 - 37 | = 30
|67 - 98 | = 31
ثم نكمل فيكون الترتيب
14 , 98 , 122 , 124 , 183
نقوم بالحساب فنجد
tota head movement = | 53 - 65 | + |65 - 67 | + |67 - 37 | + |37 - 14 | + |14 - 98 | + | 98 - 122 | + | 122 - 124 | + | 124 - 183 |
=  12 +  2 + 30 + 23 + 84 + 24 + 2 + 59 =  236   cylinders
وهذا الرقم يمثل ثلث تقريباً بالنسبة للخوارزمية الأولى

Slide 10:
مع أن    SSTFأفضل من FCFS  إلا أنه ليس الأفضل ،لأنه لا يقوم باختيار الأسطوانة التي ستكون أقرب إذا أخذت في عين الاعتبار جمع الأعداد المتواجدة لدي ، ففي الصورة التالية نجد طريقة أخرى

Slide 11:
المثال السابق أن نتجه من 53 الى 37 مع أن 37 ليست الأقرب للـ 53 و لكنه الأقرب إذا أخذت في عين الاعتبار الاختصار في الطريق الذي سوف ينتجه اختياري لهذا الرقم ، فعند اتجاه الرأس من 53 الى 37 الى 14 ، قبل خدمتي للـ65و67و98و122و124 فإن هذا الاتجاه سيعطيني مجموع تحرك الرأس=208 ، و سنلاحظ بأنها وفرت لي 28 حركة و هذا أفضل
11

Slide 12:
12
SCAN
The disk arm starts at one end of the disk, and moves toward the other end, servicing requests until it gets to the other end of the disk, where the head movement is reversed and servicing continues.
Illustration shows total head movement of 208 cylinders
هو نوع من أنواع خوارزميات جدولة الأقراص  وكيفية هذه الخوارزمية هي أن الرأس يتحرك في جهة واحدة ثم يتحول إلى الجهة المعاكسة
أي أن الرأس يتحرك من نقطة وجوده باتجاه البداية وفي طريقه يقوم بخدمة الطلبات التي تقابله واحده تلو الأخرى وعند الوصول إلى نقطة البداية حيث يكون نفذ جميع الطلبات التي واجهته في الطريق بتسلسل وصوله إليها وعند انتهائه من هذا الطريق  يقوم الرأس بعكس اتجاهه ويكون طريقه نحو نقطة النهاية وفي طريقه يقوم بخدمة جميع الطلبات بالتسلسل وعند وصوله إلى نقطة النهاية يعكس الرأس نفسه مره أخرى متجها نحو البداية وفي طريقه يقوم بخدمة جميع الطلبات
عند وصول طلب جديد إذا كان في طريق الرأس نفذه حسب تسلسله مع بقية الطلبات أما إذا كان خلفه ينتظر الطلب لحين عودة الرأس لهذا الطريق مره أخرى

Slide 13:
13
تسمى هذا الخوارزمية ب (elevator algorithm) خوارزمية المصعد تشبيها لها بالمصعد حيث أن المصعد يبدأ من الدور الصفر متجها للأعلى ويقوم وهو في طريقه بالاستجابة للطلبات التي تواجهه راغبة في الانتقال للأعلى فقط إلى أن يصل لأعلى دور ثم يعكس طريقه باتجاه الأسفل ويقوم بالمثل بالاستجابة للطلبات الراغبة في النزول للأسفل فقط وهكذا

Slide 14:
14
SCAN (Cont.)

Slide 15:
15
إذا كان الرأس متوقفا عند النقطة  53 ولدي طابور من الطلبات حسب الترتيب
98-183-37-122-14-124-65-67
الرأس يقع عند نقطة 53 وسيقوم بالاتجاه للنقطة صفر متجها نحو البداية سيقوم بتنفيذ الطلب 37 أولا في طريقه ثم سيقوم بتنفيذ الطلب 14 ثم إذا وصل للنقطة صفر سيقوم الرأس بعكس اتجاهه متجهها نحو نقطه النهاية وسيقوم بتنفيذ العمليات 65 ثم 67 ثم 98 ثم 122 ثم 124 ثم 183 على التوالي وعند وصوله لنقطة النهاية سيقوم بعكس اتجاهه إلى نقطة البداية وهو في طريقه للبداية سيقوم بتنفيذ الطلبات التي تواجهه إذ أنها حديثه وصول أي أنها وصلت وهي خلف الرأس فتنتظره لحين يغير اتجاهه
ولكي نعرف كم تحرك الرأس نقوم بحسابه كالتالي
|53-37|+|37-14|+|14-0|+|0-65|+|65-67|+|67-98|+|98-122|+|122-124|+|124-183|=
16+23+14+65+2+31+24+2+59=236 cylinders

Slide 16:
16
طريقة خوارزمية SCAN Scheduling هي أن يقوم الرأس بالتنقل في اتجاه واحد نحو البداية وعند الوصول إلى النقطة صفر يقوم بعكس اتجاهه والاتجاه نحو النهاية وعند الوصول للنهاية يعكس الرأس اتجاهه نحو البداية وهكذا
ولكن ماذا لو أن الرأس كان عند النقطة 50 مثلا متجها نحو النهاية وهي 200 وقدمت عملية 20 فستنتظر في الطابور لحين أكمال الرأس طريقه نحو النهاية ثم العودة وفي طريق الرأس للعودة نحو البداية وهو في نقطة 130 مثلا قدمت للطابور عملية 80 فسيقوم الرأس بتنفيذ العملية 80 قبل 20 مع أن وقت وصول العملية 20 قبل وبهذه الخوارزمية ستتكلف العملية 20 وقت انتظار طويل
وهذا من عيوب   SCAN Scheduling

Slide 17:
17
C-SCAN
Provides a more uniform wait time than SCAN
The head moves from one end of the disk to the other, servicing requests as it goes
When it reaches the other end, however, it immediately returns to the beginning of the disk, without servicing any requests on the return trip
Treats the cylinders as a circular list that wraps around from the last cylinder to the first one
جدولة المسح الدائري- c-scan))
هذه الجدولة تختلف عن تصميم خوارزمية المسح السابقة  لتقدم زيّ رسمي أكثر.
فهي تشبه خوارزمية المسح في أنها تبدأ من أحد طرفي القرص الصلب إلى الطرف الآخر،
خادمةً بذلك الطلبات التي تُواجهها في طريقها ؛ لكن عندما تصل إلى الطرف الآخر فإنها تعود على الفور إلى بداية القرص الصلب ، دون أن تخدم الطلبات التي في طريق العودة.

Slide 18:
18
C-SCAN (Cont)

Slide 19:
C-LOOK
Version of C-SCAN
Arm only goes as far as the last request in each direction, then reverses direction immediately, without first going all the way to the end of the disk
كما ذكرنا في الجدولتان السابقتان c-scan)) ، (scan) ، ذراع القرص الصلب يتحرك إلى نهاية القرص الصلب .
لكن عملياً لايوجد خوارزمية تبرمج هذه الطريقة.
الأكثر انتشاراً، أن الذراع يتحرك إلى آخر طلب في القرص في كل اتجاه.
ثم يعكس اتجاهه على الفور ، دون أن يذهب إلى نهاية القرص.
LOOK  و C-LOOK
لأنها تبحث عن الطلب قبل الاستمرار في الحركة في الاتجاه المعطى.

Slide 20:
20
C-LOOK (Cont)

Slide 21:
21
Operations on files
يمكن تقسيم العمليات على الملفات الى مجموعتين رئيسيتين هما :
عمليات استرجاع Retrieval operations
الـ Retrieval operation  لاتقوم باي تعديل على الملف ولكن تقرأ فقط السجلات المحددة .
عمليات تعديل update operations
أما الـupdate operations  فهي تجري التعديل على الملف اما بالإضافة او الحذف او تعديل حقل في السجلات.

Slide 22:
العمليات على الملف للوصول الى السجلات والعمل عليها تختلف على حسب نظم ادارة قواعد البيانات الــDBMS  او اللغة المستعملة ولكن على العموم يمكن حصرها كالاتي :-
Open: تجهز الملف لعملية القراءة او الكتابة ويتم  حجز عدد ملائم من الـ buffer  على الاقل اثنين لوضع الـblocks  بها تقوم بقراءة الـfile header  ووضع مؤشر الملف في بداية الملف.
Reset : تضع مؤشر الملف المفتوح في بداية الملف .
Find (or locate) : تبحث عن أول سجل يحقق شرط البحث وتنقل الـblock  الذي يحوي السجل الذي يحقق الشرط في الذاكرة buffers ويقوم مؤشر الملف بالاشارة الى السجل في الـbuffer ليصير السجل الحالي current record  .

Slide 23:
23
Read (or Get )  : تنسخ السجل الحالي current record  الموجود في الـbuffer الى البرنامج الذي يطلبه، ايضاً قد تحرك مؤشر الملف الى السجل التالي  الذي قد يكون مطلوب بعد هذا السجل .
Find Next: تبحث عن السجل التالي الذي يحقق شرط البحث، تنقل الـblock  المحتوى لهذا السجل الى buffer ( اذا لم يكن اصلا موجودا بها ) ، يوضع السجل في الـ buffer  ويصبح السجل الحالي current record  .
Modify : تعدل قيمة حقل بالسجل الحالي current record  ثم تعدل الملف على القرص .

Slide 24:
24
Delete : تمسح السجل الحالي current  ثم تعدل الملف على القرص لعكس عملية التعديل to reflect the modification  .
Insert : تضيف سجل جديد بالملف حيث تحدد اولاً الـblock الذي يدخل به السجل، ثم تنقل هذا الـblock الى الـbuffer (إن لم يكن موجود) تكتب السجل على الـbuffer  ثم تكتب محتوى الـbuffer في القرص .
Close : اكمال عملية الوصول والتعامل مع الملف بتحرير  الـbuffers  .

Slide 25:
25
كل العمليات السابقة (عدا open and close ) تسمى record at a time operation  لان أي عملية تنفذ على سجل واحد
يمكن ان نجمع العمليات find, find next Read  في عملية واحدة تطبق على الملف وهي scan  وهذه المجموعة من العمليات تسمى set at time operation .
Scan : اذا تم فتح الملف في هذه اللحظة فان الـscan تعطي اول سجل ، وفي غير ذلك تعطى السجل التالي . اذا تم تحديد شرط مع هذه العملية فهي تعطى اول سجل يحقق الشرط ثم التالي . وهكذا .

Slide 26:
26
وتوجد أيضاً امثلة للعمليات من النوع set at time operation
Find all : تحدد كل السجلات بالملف والتي تحقق الشرط .
Find ordered  : تسترجع كل السجلات بالملف بترتيب محدد .
Reorganize  : تبدأ عملية التنظيم كما سنرى لاحقا بعض تنظيمات الملف تحتاج إعادة ترتيب دوريا… مثلا إعادة ترتيب الملف بناءاً على حقل آخر .

Slide 27:
27
File organization  : تنظيم الملف نعنى به تنظيم البيانات داخل الملف إلى سجلات و blocks ونعنى به أيضا هياكل الوصول إلى البيانات access structures ونعني به أيضا  طريقة وضع السجلات والـblocks  في وسائط التخزين .
Access method: طريقة الوصول الى البيانات تضم مجموعة من العمليات التي تتيح التعامل مع الملف (مثل العمليات الموضحة سابقا) على كل حال يمكن ان نطبق عدد من Access method على تنظيم معين للملفات فمثلا الـindexed access لايمكن ان يطبق الا على الملف المفهرس أصلاً .
Access method  and File organization

Slide 28:


